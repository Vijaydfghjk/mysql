#create database practice;

#drop table if exists users;

create table users(

id int auto_increment primary Key,
name varchar(50) not null,
email varchar(50) unique not null,
password varchar(50) not null
);	


insert into users(name, email, password) values
('Vijay','Vijay@gmail.com','june@123'),
('Ram','Ram@gmail.com','May@123');


create table products (

 id int auto_increment primary Key,
 name varchar(50) not null,
 description text,
 price decimal(10,2) not null
);

insert into products(name,description,price) values
('Laptop','High performance laptop',999.99),
('Mouse', 'Wireless mouse', 19.99),
('Keyboard', 'Mechanical keyboard', 49.99);


create table orders(
id int auto_increment primary Key,
user_id int,
order_date timestamp default current_timestamp,
status varchar(50) default 'pending',
foreign key (user_id) references users(id)
);

insert into orders(user_id,status) values

(1,'Pending');


## Deleting the Table with Foreign_key

SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE students;
SET FOREIGN_KEY_CHECKS = 1;


create table order_items(

id int auto_increment primary Key,
order_id int,
product_id int,
quantity int not null,
price decimal(10,2) not null,
foreign key (order_id) references orders(id),
foreign key (product_id) references products(id)
);

insert into order_items(order_id,product_id,quantity,price) values

(1,1,1,999.99);


join 

What: Fetch related data from multiple tables using relationships (foreign keys).

Why: In real systems, data is often split into multiple tables for normalization.

select 
users.name,
users.email,products.name,
products.description, 
products.price, 
order_items.quantity, 
orders.order_date 
from 
users 
inner join 
products on products.id =  users.id
left join 
order_items on order_items.product_id = products.id  
left join 
orders on orders.user_id = order_items.product_id;


about Find() // Fetching the all record 
about Take() // Fetching Only the First Match (without any ordering)
about First() // Fetching the First Record After Ordering



